'''
Ch·∫°y l·ªánh "python crons/collectSensorData.py" ƒë·ªÉ th·ª±c thi
'''

import requests
import time
from datetime import datetime
from pymongo import MongoClient
from dotenv import load_dotenv
import os

load_dotenv(dotenv_path=".env.local")
API_KEY = os.getenv("CRON_JOB_API_KEY")
API_URL = os.getenv("CRON_JOB_API_URL")
MONGO_URI = os.getenv("MONGODB_URI")

# K·∫øt n·ªëi t·ªõi MongoDB
client = MongoClient(MONGO_URI)
db = client["swdb"]
collection = db["trees"]

# H√†m g·ªçi API v√† l∆∞u d·ªØ li·ªáu
def fetch_and_store():
    try:
        print(f"[{datetime.now()}] ƒêang g·ªçi API...")
        headers = {"X-API-Key": API_KEY}
        response = requests.get("http://localhost:3000/api/weather-data", headers=headers)
        if response.status_code == 200:
            data = response.json()
            print("‚úîÔ∏è ƒê√£ nh·∫≠n d·ªØ li·ªáu th√†nh c√¥ng.")
            if 'date' in data:
                print("Ng√†y (date) trong payload:", data['date'])
            else:
                print("Kh√¥ng t√¨m th·∫•y tr∆∞·ªùng 'date' trong payload.")
        else:
            print(f"‚ùå L·ªói khi g·ªçi API: {response.status_code} - {response.text}")
            return

        '''
        # Th√™m timestamp v√†o d·ªØ li·ªáu
        data['timestamp'] = datetime.now()

        # L∆∞u v√†o MongoDB
        collection.insert_one(data)
        print("‚úîÔ∏è ƒê√£ l∆∞u d·ªØ li·ªáu th√†nh c√¥ng.")
        '''
        print("ƒê√¢y l√† cron jobs, n√≥ ƒë∆∞·ª£c k√≠ch ho·∫°t m·ªói 30s 1 l·∫ßn")
        print("API Key: ", API_KEY),
        print("API URL: ", API_URL),
        print("Danh s√°ch c√¢y:")
        for tree in collection.find():
            print('- ' + tree['name'])
        print()
    except Exception as e:
        print("‚ùå L·ªói khi g·ªçi API ho·∫∑c l∆∞u d·ªØ li·ªáu:", e)

if __name__ == "__main__":
    print("üïí Ch∆∞∆°ng tr√¨nh ƒëang ch·∫°y...")
    fetch_and_store()
